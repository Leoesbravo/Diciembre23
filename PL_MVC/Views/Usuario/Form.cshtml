@model ML.Usuario
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="text-center">Formulario de Usuarios <i class="fa-solid fa-circle-user" style="color: #000000;"></i></h2>
<hr />
@using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.IdUsuario)
    <div class="row">
  
        <div class="col-md-4">
            @Html.LabelFor(model => model.Nombre)
            <div class="input-group mb-3">
                <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-circle-user" style="color: #000000;"></i></span>
                @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @placeholder = "Ejemplo: Luis" })
            </div>
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.ApellidoPaterno)
            @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", @placeholder = "Ejemplo: Luis" })
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.ApellidoMaterno)
            @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", @placeholder = "Ejemplo: Luis" })
        </div>

    </div>
    <div class="row">
        <div class="col-md-4" >
            @Html.LabelFor(model => model.Edad)
            <div class="input-group mb-3" >
                <span class="input-group-text" id="basic-addon1"><i class="fa-regular fa-calendar-days"></i></span>
                @Html.TextBoxFor(model => model.Edad, new { @class = "form-control", @id="datepicker", @autocomplete="false" })
            </div>
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.Rol.IdRol)
            @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Roles, "IdRol", "Tipo"), "Selecciona un Rol", new { @class = "form-control" })
        </div>
        <div class="col-md-4">
            @Html.Label("Imagen")
            <div class="input-group mb-3">
                <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-camera"></i></span>
                <input id="amd" type="file" class="form-control" onchange="validateFile(), readURL(this)" />
            </div>
            <img id="img" src="https://upload.wikimedia.org/wikipedia/commons/thumb/2/2c/Default_pfp.svg/2048px-Default_pfp.svg.png" height="150" width="150"/>
        </div>
    </div>
    <hr />

    <div class="text-center">
        <h3>Dirección</h3>
    </div>
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.Direccion.Calle)
            @Html.TextBoxFor(model => model.Direccion.Calle, new { @class = "form-control" })
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais)
            @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Pais.Paises, "IdPais", "Nombre"), "Selecciona un Pais", new { @class = "form-control", @id = "ddlPais" })
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado)
            @if (Model.Direccion.Colonia.Municipio.Estado.Estados == null)
            {
                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(string.Empty, "Value", "Text"), "Selecciona un Pais primero", new { @class = "form-control", @id = "ddlEstado" })
            }
            else
            {
                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Estados, "IdEstado", "Nombre"), "Selecciona un Estado", new { @class = "form-control", @id = "ddlEstado" })
            }

        </div>
    </div>
    <div class="row">
        @if (Model.IdUsuario != 0)
        {
            <input type="submit" class="btn btn-info" value="Actualizar" />
        }
        else
        {
            <input type="submit" class="btn btn-success" value="Agregar" />
        }

        <a href="@Url.Action("GetAll", "Usuario")" class="btn btn-danger">Cancelar</a>
    </div>

}

@Scripts.Render("~/bundles/jquery")
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js"></script>
<script type="text/javascript">
     $(document).ready(function () {
         $("#ddlPais").change(function () {
                    $("#ddlEstado").empty();
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("EstadoGetByIdPais", "Usuario")',
                        dataType: 'json',
                        data: { idPais: $("#ddlPais").val() },
                        success: function (estados) {
                            $("#ddlEstado").append('<option value="0">'+ 'Seleccione un estado' + '</option>');
                            $.each(estados, function (i, estados) {
                                $("#ddlEstado").append('<option value="'
                                                           + estados.IdEstado + '">'
                                                           + estados.Nombre + '</option>');
                            });
                        },
                        error: function (xhr, status, error) {
                            alert(xhr.responseText);
                            console.log(status);
                            console.log(error);
                        }
                    });
                });

            });
    $(function () {
        $("#datepicker").datepicker({
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            changeYear: true,
            showAnim: "clip"
        });
    });


    function validateFile() {
        var allowedExtension = ['jpeg', 'jpg', 'png'];
        var fileExtension = document.getElementById('amd').value.split('.').pop().toLowerCase();
        var isValidFile = false;

        for (var index in allowedExtension) {

            if (fileExtension === allowedExtension[index]) {
                isValidFile = true;
                break;
            }
        }

        if (!isValidFile) {
            alert('Las extensiones permitidas son : *.' + allowedExtension.join(', *.'));
            document.getElementById('amd').value = "";
        }

        return isValidFile;
    }

    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#img').attr('src', e.target.result);

            };

            reader.readAsDataURL(input.files[0]);
        }
    }
</script>

